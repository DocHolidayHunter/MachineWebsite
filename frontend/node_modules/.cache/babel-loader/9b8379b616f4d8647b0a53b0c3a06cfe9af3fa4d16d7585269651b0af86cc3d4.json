{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicka\\\\OneDrive\\\\Desktop\\\\Github\\\\MachineWebsite\\\\frontend\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [prediction, setPrediction] = useState(null);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8000/ws');\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setPrediction(data);\n    };\n    return () => socket.close();\n  }, []);\n  const barData = {\n    labels: ['Probability of Delay'],\n    datasets: [{\n      label: 'Probability',\n      data: [prediction ? prediction.probability_of_delay * 100 : 0],\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: barData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"cZ8V3d6xYXpC7aDc2gkvQiY7/SU=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Pie","jsxDEV","_jsxDEV","Charts","_s","prediction","setPrediction","socket","WebSocket","onmessage","event","data","JSON","parse","close","barData","labels","datasets","label","probability_of_delay","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nicka/OneDrive/Desktop/Github/MachineWebsite/frontend/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\n\r\nconst Charts = () => {\r\n  const [prediction, setPrediction] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket('ws://localhost:8000/ws');\r\n    socket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      setPrediction(data);\r\n    };\r\n    return () => socket.close();\r\n  }, []);\r\n\r\n  const barData = {\r\n    labels: ['Probability of Delay'],\r\n    datasets: [\r\n      {\r\n        label: 'Probability',\r\n        data: [prediction ? prediction.probability_of_delay * 100 : 0],\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <Bar data={barData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IACtDD,MAAM,CAACE,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCL,aAAa,CAACK,IAAI,CAAC;IACrB,CAAC;IACD,OAAO,MAAMJ,MAAM,CAACO,KAAK,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,CAAC,sBAAsB,CAAC;IAChCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBP,IAAI,EAAE,CAACN,UAAU,GAAGA,UAAU,CAACc,oBAAoB,GAAG,GAAG,GAAG,CAAC,CAAC;MAC9DC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BpB,OAAA,CAACH,GAAG;MAACY,IAAI,EAAEI;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACtB,EAAA,CA5BID,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}