{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicka\\\\OneDrive\\\\Desktop\\\\Github\\\\MachineWebsite\\\\frontend\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  onPrediction\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    depTime: '',\n    crsArrTime: '',\n    TaxiIn: 0,\n    TaxiOut: 0,\n    CarrierDelay: 0,\n    WeatherDelay: 0,\n    NASDelay: 0,\n    LateAircraftDelay: 0\n  });\n  const [error, setError] = useState('');\n  const convertTimeToMinutes = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const transformedData = {\n        DepTimeMinutes: convertTimeToMinutes(formData.depTime),\n        CRSArrTimeMinutes: convertTimeToMinutes(formData.crsArrTime),\n        TaxiIn: parseFloat(formData.TaxiIn),\n        TaxiOut: parseFloat(formData.TaxiOut),\n        CarrierDelay: parseFloat(formData.CarrierDelay),\n        WeatherDelay: parseFloat(formData.WeatherDelay),\n        NASDelay: parseFloat(formData.NASDelay),\n        LateAircraftDelay: parseFloat(formData.LateAircraftDelay)\n      };\n      const response = await axios.post('http://localhost:8000/predict', transformedData);\n      onPrediction(response.data); // Pass the prediction result to the parent component\n    } catch (err) {\n      setError('Error processing prediction. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      name: \"depTime\",\n      onChange: e => setFormData({\n        ...formData,\n        depTime: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      name: \"crsArrTime\",\n      onChange: e => setFormData({\n        ...formData,\n        crsArrTime: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"SzmfhIQRuy5ocZq1rwfqykqFu/Q=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Form","onPrediction","_s","formData","setFormData","depTime","crsArrTime","TaxiIn","TaxiOut","CarrierDelay","WeatherDelay","NASDelay","LateAircraftDelay","error","setError","convertTimeToMinutes","time","hours","minutes","split","map","Number","handleSubmit","e","preventDefault","transformedData","DepTimeMinutes","CRSArrTimeMinutes","parseFloat","response","post","data","err","onSubmit","className","children","type","name","onChange","target","value","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nicka/OneDrive/Desktop/Github/MachineWebsite/frontend/src/components/Form.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Form = ({ onPrediction }) => {\r\n  const [formData, setFormData] = useState({\r\n    depTime: '',\r\n    crsArrTime: '',\r\n    TaxiIn: 0,\r\n    TaxiOut: 0,\r\n    CarrierDelay: 0,\r\n    WeatherDelay: 0,\r\n    NASDelay: 0,\r\n    LateAircraftDelay: 0,\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const convertTimeToMinutes = (time) => {\r\n    const [hours, minutes] = time.split(':').map(Number);\r\n    return hours * 60 + minutes;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const transformedData = {\r\n        DepTimeMinutes: convertTimeToMinutes(formData.depTime),\r\n        CRSArrTimeMinutes: convertTimeToMinutes(formData.crsArrTime),\r\n        TaxiIn: parseFloat(formData.TaxiIn),\r\n        TaxiOut: parseFloat(formData.TaxiOut),\r\n        CarrierDelay: parseFloat(formData.CarrierDelay),\r\n        WeatherDelay: parseFloat(formData.WeatherDelay),\r\n        NASDelay: parseFloat(formData.NASDelay),\r\n        LateAircraftDelay: parseFloat(formData.LateAircraftDelay),\r\n      };\r\n\r\n      const response = await axios.post('http://localhost:8000/predict', transformedData);\r\n      onPrediction(response.data); // Pass the prediction result to the parent component\r\n    } catch (err) {\r\n      setError('Error processing prediction. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        type=\"time\"\r\n        name=\"depTime\"\r\n        onChange={(e) => setFormData({ ...formData, depTime: e.target.value })}\r\n        required\r\n      />\r\n      <input\r\n        type=\"time\"\r\n        name=\"crsArrTime\"\r\n        onChange={(e) => setFormData({ ...formData, crsArrTime: e.target.value })}\r\n        required\r\n      />\r\n      <button type=\"submit\">Predict</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}